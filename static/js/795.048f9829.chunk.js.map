{"version":3,"file":"static/js/795.048f9829.chunk.js","mappings":"oMAWaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,K,oECfWC,E,QAAeR,GAAAA,OAAH,6lBACZ,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACrB,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACT,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAEzB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,QAC3B,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,KAGnB,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAKd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,SAUtB,SAAAC,GAAI,OAAIA,EAAKX,MAAMR,MAAM,M,UCxBzCoB,EAAS,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACjD,OACE,SAACnB,EAAD,CAAce,KAAMA,EAAME,MAAOA,EAAOE,QAASA,EAASD,SAAUA,EAApE,SACGF,KAKPF,EAAOM,aAAe,CACpBF,UAAU,EACVH,KAAM,SACNC,SAAU,KACVC,MAAO,KACPE,QAAS,kBAAM,OAUjB,S,2MCvBaE,GAAU7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,qFAGT,SAAAS,GAAC,OAAIA,EAAEC,MAAMqB,MAAMd,KAGjBe,EAAQhC,EAAAA,GAAAA,MAAH,mFACC,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACvB,SAAAO,GAAC,OAAIA,EAAEC,MAAMM,UAAUiB,KAC3B,SAAAxB,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,WAGlBC,GAAQnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAH,kPACH,SAAAS,GAAC,OAAIA,EAAEC,MAAMqB,MAAME,KACrB,SAAAxB,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACpB,SAAAO,GAAC,OAAIA,EAAEC,MAAM2B,QAAQlB,UACf,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOL,UACnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAIpB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAIzByB,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OAAQ,SAAC,KAAD,CAAcA,KAAMA,EAAMC,OAAQ,SAAAC,GAAO,OAAI,SAACC,EAAD,UAAYD,QAG7DC,EAAY1C,EAAAA,GAAAA,KAAH,0DACA,SAAAS,GAAC,OAAIA,EAAEC,MAAMM,UAAU2B,MAC3B,SAAAlC,GAAC,OAAIA,EAAEC,MAAMC,OAAOiC,OAGlBC,GAAW7C,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAH,gDACH,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,O,gNC/BtB,SAAS4C,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,aAO7BC,EAAgBC,EAAAA,KAAaC,MAAM,CACvCX,KAAMU,EAAAA,KACHE,IAAI,EAAG,wCACPC,IAAI,GAAI,yCACRC,SAAS,+BACZC,OAAQL,EAAAA,KACLE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRG,QATe,6EASM,8BACrBF,SAAS,kCAGd,GAAqBG,EAAAA,EAAAA,MAAdC,GAAP,eACA,GAAgCC,EAAAA,EAAAA,MAAxBC,KAAMC,OAAd,MAAyB,GAAzB,EAEMC,EAAU,mCAAG,WAAOC,GAAP,8EAEGF,EAASG,MAAK,SAAAC,GAAO,OAAIA,EAAQzB,OAASuB,EAAWvB,QAFxD,yCAKN0B,EAAAA,GAAAA,MAAA,UAAeH,EAAWvB,KAA1B,4BALM,uBAQTkB,EAAWK,GARF,OASfG,EAAAA,GAAAA,QAAc,oBATC,gDAWfA,EAAAA,GAAAA,MAAY,2CACZC,QAAQC,IAAR,MAZe,yDAAH,sDAuBhB,OACE,SAAC,KAAD,CACEC,cA9CkB,CACpB7B,KAAM,GACNe,OAAQ,IA6CNe,iBAAkBrB,EAClBsB,SAXiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,QAAQC,IAAII,GACZV,EAAWU,GACXC,IACAzB,KAIA,UAIE,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CAAOxB,KAAK,OAAOgB,KAAK,OAAOkC,MAAM,mGACrC,SAAC,KAAD,CAAWlC,KAAK,aAElB,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOhB,KAAK,MAAMgB,KAAK,SAASkC,MAAM,kGACtC,SAAC,KAAD,CAAWlC,KAAK,eAElB,UAAC,KAAD,YACE,SAAC,KAAD,CACEhB,KAAK,WACLgB,KAAK,cAHT,uBAQA,SAACjB,EAAA,EAAD,CAAQC,KAAK,SAAb,8B,wCC5EKmD,EAAY,SAAAC,GAAK,OAAIA,EAAMf,SAASgB,Q,mBCEpC5C,EAAQhC,EAAAA,GAAAA,MAAH,mFACC,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACvB,SAAAO,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,KAC3B,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,WAGlBC,EAAQnC,EAAAA,GAAAA,MAAH,sPACL,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACf,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACxB,SAAAO,GAAC,OAAIA,EAAEC,MAAM2B,QAAQlB,UACf,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOL,UACnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAIpB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UCItC,EAhBe,WACX,IAAM+D,GAASC,EAAAA,EAAAA,IAAYH,GACrBI,GAAWC,EAAAA,EAAAA,MAMjB,OACI,UAAC/C,EAAD,oCAEI,SAACG,EAAD,CAAOZ,KAAK,OAAOyD,MAAOJ,EAAQK,SAPhB,SAAAC,GACtBJ,GAASK,EAAAA,EAAAA,GAAaD,EAAEE,OAAOJ,eCR1B1D,EAAStB,EAAAA,GAAAA,OAAH,oZAGR,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACT,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAE3B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,UAAUiB,KACzB,SAAAxB,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MAGb,SAAAO,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAKd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,SAwB/BiE,GApBgBrF,EAAAA,GAAAA,MAAH,2QAUd,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,WAGpB,SAAAzB,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAGpB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,SAIZpB,EAAAA,GAAAA,EAAH,oZAGN,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACT,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAE3B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMM,UAAUiB,KACzB,SAAAxB,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MAGb,SAAAO,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAKd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAO2E,UCtD/BC,EAAUvF,EAAAA,GAAAA,IAAH,uOAaPwF,EAAWxF,EAAAA,GAAAA,IAAH,qQAOR,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACV,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACvB,SAAAH,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,UAGzBG,EAAStB,EAAAA,GAAAA,OAAH,yWAOH,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACzB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,WAMnB,SAAAzB,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,S,UCnC1BqE,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAA2C,IAA1B7C,EAAyB,EAAzBA,aAAcvB,EAAW,EAAXA,UAE5CqE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAAAC,GACA,WAAbA,EAAIC,MACNjD,KAKJ,OADAkD,OAAOC,iBAAiB,UAAWJ,GAC5B,WACLG,OAAOE,oBAAoB,UAAWL,MAEzC,CAAC/C,IAQF,OAAOqD,EAAAA,EAAAA,eACL,SAACb,EAAD,CAAS5D,QAPiB,SAAAoE,GACtBA,EAAIM,gBAAkBN,EAAIX,QAC5BrC,KAKF,UACE,UAACyC,EAAD,YAAU,SAAC,EAAD,CAAQ7D,QAASoB,EAAjB,UAA+B,SAAC,MAAD,CAAyBuD,KAAM,OAAe9E,OAEzFiE,G,iCCzBW,SAASc,EAAT,GAAuC,IAApBxD,EAAmB,EAAnBA,aAAcyD,EAAK,EAALA,GAC9C,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACA,GAA0CC,EAAAA,EAAAA,IAAuBH,GAAjE,IAAQ7C,KAAMK,OAAd,MAAwB,GAAxB,EAA4B4C,EAA5B,EAA4BA,UACtBxC,EAAgB,CACpB7B,KAAMyB,EAAQzB,KACde,OAAQU,EAAQ6C,OAGZ7D,EAAgBC,EAAAA,KAAaC,MAAM,CACvCX,KAAMU,EAAAA,KACHE,IAAI,EAAG,wCACPC,IAAI,GAAI,yCACRC,SAAS,+BACZC,OAAQL,EAAAA,KACLE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRG,QATe,6EASM,8BACrBF,SAAS,kCAGRQ,EAAU,mCAAG,WAAOiD,GAAP,0FAETJ,GAAc,QAACF,GAAAA,GAAOM,IAFb,OAGf7C,EAAAA,GAAAA,QAAc,sBAHC,gDAKfA,EAAAA,GAAAA,MAAY,8CACZC,QAAQC,IAAR,MANe,yDAAH,sDAehB,OACE,8BACGyC,GAAa,SAAC,IAAD,CAAY3G,MAAM,aACrB,SAAC,KAAD,CACXmE,cAAeA,EACfC,iBAAkBrB,EAClBsB,SAXwB,SAACC,GAC3BV,EAAWU,GACXxB,KAMa,UAIX,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CAAOxB,KAAK,OAAOgB,KAAK,OAAOkC,MAAM,mGACrC,SAAC,KAAD,CAAWlC,KAAK,aAElB,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOhB,KAAK,MAAMgB,KAAK,SAASkC,MAAM,kGACtC,SAAC,KAAD,CAAWlC,KAAK,eAGlB,SAACjB,EAAA,EAAD,CAAQC,KAAK,SAAb,mCClDR,I,EAkDA,EAlDwB,SAAC,GAAkD,IAAD,IAA/CyC,QAAWzB,EAAoC,EAApCA,KAAMe,EAA8B,EAA9BA,OAAQkD,EAAsB,EAAtBA,GAClD,GADwE,EAAlBO,WACpBC,EAAAA,EAAAA,WAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAc,WAClBD,GAAcD,IAEhB,GAAuCG,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBT,EAAxB,KAAwBA,UAGlBU,EAAa,mCAAG,WAAMd,GAAN,0FAEZa,EAAcb,GAFF,OAGlBvC,EAAAA,GAAAA,QAAc,sBAHI,gDAKlBA,EAAAA,GAAAA,MAAY,8CACZC,QAAQC,IAAR,MANkB,yDAAH,sDAUnB,OACE,iCACE,yBAAI5B,EAAJ,KAAYe,MACZ,UAACvD,EAAA,EAAD,CAAKwH,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAAShG,MAAM,MAA7E,WASE,UAAC4D,EAAD,CAAMqC,KAAI,cAASpE,GAAnB,WACE,SAAC,MAAD,CAAWgD,KAAM,MACjB,uCAGF,UAAC,EAAD,CAAQ/E,KAAK,SAASI,QAAS,kBAAM2F,EAAcd,IAAK9E,SAAUkF,EAAlE,UAA8EA,GAAY,SAAC,IAAD,CAAY3G,MAAM,UAAUqG,KAAM,MAAS,SAAC,MAAD,CAAWA,KAAM,KAAtJ,eAEDW,IACC,SAACrB,EAAD,CAAO7C,aAAcoE,EAArB,UACE,SAACZ,EAAD,CAAUxD,aAAcoE,EAAaX,GAAIA,UCjDtCmB,EAAO3H,EAAAA,GAAAA,GAAH,+VAIA,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MAChB,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MACrB,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MAClB,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MAGjB,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,MCwBxC,EA3BoB,WAChB,OAAkDwD,EAAAA,EAAAA,MAAlD,IAAQC,KAAMC,OAAd,MAAyB,GAAzB,EAA6BgE,EAA7B,EAA6BA,MAAOhB,EAApC,EAAoCA,UAC9BhC,GAASC,EAAAA,EAAAA,IAAYH,GACrBmD,GAAkBC,EAAAA,EAAAA,UAAQ,WAC5B,IAAMC,EAAmBnD,EAAOoD,cAEhC,OAAOpE,EAASgB,QAAO,SAAAZ,GAAO,OAC1BA,EAAQzB,KAAKyF,cAAcC,SAASF,QAEzC,CAACnE,EAAUgB,IAEd,OACI,gCACKgD,IAAU,mEACVhB,GAAa,SAAC7G,EAAA,EAAD,CAAKwH,QAAQ,OAAOC,eAAe,SAASU,GAAI,EAAhD,UAAmD,SAAC,IAAD,CAAYjI,MAAM,eAC9E,wBACI4H,EAAgBM,KAAI,SAACnE,GAAD,OACjB,SAAC2D,EAAD,WACI,SAAC,EAAD,CAAiB3D,QAASA,KADnBA,EAAQwC,aCU3C,EAzBiB,WACf,OAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAc,WAClBD,GAAcD,IAGhB,OACE,UAAClH,EAAA,EAAD,CAAK0B,MAAM,IAAIhB,EAAG,EAAG2H,GAAG,MAAMnH,EAAE,SAAhC,WACE,uCACA,UAACK,EAAA,EAAD,CAAQC,KAAK,SAASI,QAASwF,EAA/B,WACE,SAAC,MAAD,CAAeb,KAAM,KADvB,kBAGCW,IACC,SAACrB,EAAD,CAAO7C,aAAcoE,EAArB,UACE,SAACrE,EAAD,CAAaC,aAAcoE,OAG/B,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,KAAD,CAAgBkB,UAAW,IAAMC,cAAY","sources":["components/Box.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactSelectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/EditForm/EditForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position\n);","\nimport styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accent};\n  font-family: inherit;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: ${p => p.theme.radii.normal};\n  border-width: 0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover:not(:disabled), :focus:not(:disabled) {\n    background-color: ${p => p.theme.colors.hover};\n  }\n\n  &:disabled {\n    opacity: 0.4;\n    cursor: initial;\n  }\n  \n  svg {\n    @media screen and (min-width: 768px) {\n      margin-right: ${prop => prop.theme.space[2]}px;\n      vertical-align: bottom;\n    }\n  }\n`;","import PropTypes from 'prop-types';\nimport { StyledButton } from './Button.styled';\n\nconst Button = ({ type, children, width, disabled, onClick }) => {\n  return (\n    <StyledButton type={type} width={width} onClick={onClick} disabled={disabled}>\n      {children}\n    </StyledButton>\n  );\n};\n\nButton.defaultProps = {\n  disabled: false,\n  type: 'button',\n  children: null,\n  width: null,\n  onClick: () => null,\n}\n\nButton.propTypes = {\n  type: PropTypes.string,\n  width: PropTypes.number,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default Button;","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex; \n  flex-direction: column;\n  width: ${p => p.theme.sizes.m};\n`;\n\nexport const Label = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.primary};\n`;\n    \nexport const Input = styled(Field)`\n  min-width: ${p => p.theme.sizes.s};\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :focus {\n  border-color: ${p => p.theme.colors.accent};\n}\n`;\n\nexport const FormError = ({ name }) => {\n  return (<ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />)\n};\n\nconst ErrorText = styled.span`\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const Checkbox = styled(Field)`\n  margin-right: ${p => p.theme.space[2]}px;\n`;","import { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contacts/services/contactsApi';\nimport { toast } from 'react-toastify';\nimport { FormBox, FormError, Input, Label, Checkbox } from './ContactForm.styled';\nimport Button from 'components/Button';\n\nexport default function ContactForm({onCloseModal}) {\n  const initialValues = {\n    name: '',\n    number: '',\n    // favourite: false,\n  };\n  const phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n  const contactSchema = yup.object().shape({\n    name: yup.string()\n      .min(2, 'Name must be more than 2 characters!')\n      .max(30, 'Name must be less than 30 characters!')\n      .required('The name field is required.'),\n    number: yup.string()\n      .min(6, 'Phone must be more than 6 characters!')\n      .max(13, 'Phone must be less than 13 characters!')\n      .matches(phoneRegExp, 'Phone number is not valid.')\n      .required('The phone field is required.'),\n  })\n\n  const [addContact] = useAddContactMutation();\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const setContact = async (newContact) => {\n    try {\n      const isContact = contacts.find(contact => contact.name === newContact.name);\n\n      if (isContact) {\n        return toast.error(`${newContact.name} is already in contact`);\n      }\n\n      await addContact(newContact);\n      toast.success('Contact is added')\n    } catch (error) {\n      toast.error('Unable to add contact. Please try again');\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    setContact(values);\n    resetForm();\n    onCloseModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={contactSchema}\n      onSubmit={handleSubmit}>\n      <FormBox>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer.\"/>\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          Phone\n          <Input type=\"tel\" name=\"number\" title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"/>\n          <FormError name=\"number\" />\n        </Label>\n        <Label>\n          <Checkbox\n            type=\"checkbox\"\n            name=\"favourite\"\n          />\n          Add to favourite\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </FormBox>\n    </Formik>\n  );\n}\n","export const getFilter = state => state.contacts.filter;","import styled from 'styled-components'\n\nexport const Label = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.primary};\n`\n    \nexport const Input = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  margin-left: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :focus {\n  border-color: ${p => p.theme.colors.accent};\n}\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactActions';\nimport { getFilter } from 'redux/contacts/contactSelectors';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    const changeFilterValue = e => {\n        dispatch(changeFilter(e.target.value));\n    };\n    \n    return (\n        <Label>\n            Find contacts by name\n            <Input type=\"text\" value={filter} onChange={changeFilterValue} />\n        </Label>\n    );\n}\n\nexport default Filter;","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accent};\n  font-family: inherit;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: ${p => p.theme.radii.normal};\n  border-width: 0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover, :focus {\n    background-color: ${p => p.theme.colors.hover};\n  }\n`;\n\nexport const CheckboxLabel = styled.label`\n  position: relative;\n  \n  & input {\n    opacity: 0;\n  }\n  & > svg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    fill: ${p => p.theme.colors.primary};;\n  }\n  & input:checked ~ svg {\n    fill: ${p => p.theme.colors.accent};\n  }\n  & input:hover ~ svg {\n    fill: ${p => p.theme.colors.hover};\n  }\n`;\n\nexport const Call = styled.a`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accent};\n  font-family: inherit;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[2]}px;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: ${p => p.theme.radii.normal};\n  border-width: 0;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover, :focus {\n    background-color: ${p => p.theme.colors.green};\n  }\n`;","import styled from 'styled-components'\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`\n\nexport const ModalBox = styled.div`\n  position: absolute;\n  top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(1);\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  padding: ${p => p.theme.space[5]}px;\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n`\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 2px;\n  top: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.primary};\n  border-width: 0;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover, :focus {\n   color: ${p => p.theme.colors.hover};\n  }\n\n  svg {\n    fill: currentColor;\n  }\n`","import PropTypes from 'prop-types';\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\nimport { Overlay, ModalBox, Button } from './Modal.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal ({onCloseModal, children}) {\n\n  useEffect(() => {\n    const onEscPress = evt => {\n      if (evt.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPress);\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n}, [onCloseModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onCloseModal();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalBox><Button onClick={onCloseModal}><IoIosCloseCircleOutline size={22}/></Button>{children}</ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func.isRequired,\n};","import { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport { useUpdateContactMutation, useGetContactByIdQuery } from 'redux/contacts/services/contactsApi';\nimport { toast } from 'react-toastify';\nimport { FormBox, FormError, Input, Label } from '../ContactForm/ContactForm.styled';\nimport Button from 'components/Button';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport default function EditForm({onCloseModal, id}) {\n  const [updateContact] = useUpdateContactMutation();\n  const { data: contact = [], isLoading } = useGetContactByIdQuery(id);\n  const initialValues = {\n    name: contact.name,\n    number: contact.phone,\n  };\n  const phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n  const contactSchema = yup.object().shape({\n    name: yup.string()\n      .min(2, 'Name must be more than 2 characters!')\n      .max(30, 'Name must be less than 30 characters!')\n      .required('The name field is required.'),\n    number: yup.string()\n      .min(6, 'Phone must be more than 6 characters!')\n      .max(13, 'Phone must be less than 13 characters!')\n      .matches(phoneRegExp, 'Phone number is not valid.')\n      .required('The phone field is required.'),\n  });\n\n  const setContact = async (fields) => {\n    try {\n      await updateContact({id, ...fields});\n      toast.success('Contact is updated')\n    } catch (error) {\n      toast.error('Unable to update contact. Please try again');\n      console.log(error);\n    }\n  };\n\n  const handleUpdateContact = (values) => {\n    setContact(values);\n    onCloseModal();\n  };\n\n  return (\n    <>\n      {isLoading ? (<ClipLoader color=\"#757575\" />) :\n                (<Formik\n      initialValues={initialValues}\n      validationSchema={contactSchema}\n      onSubmit={handleUpdateContact}>\n      <FormBox>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer.\"/>\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          Phone\n          <Input type=\"tel\" name=\"number\" title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"/>\n          <FormError name=\"number\" />\n        </Label>\n\n        <Button type=\"submit\">Update contact</Button>\n      </FormBox>\n    </Formik>)\n            }\n    </>\n  );\n}","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/services/contactsApi';\nimport { Button, Call } from './ContactListItem.styled';\nimport { IoMdTrash, IoIosCall } from 'react-icons/io';\nimport { Box } from 'components/Box';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Modal from 'components/Modal';\nimport EditForm from 'components/EditForm';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst ContactListItem = ({ contact: { name, number, id, favourite } }) => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  // const [toggleFavorite] = useToggleFavouriteMutation();\n\n  const removeContact = async id => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact is deleted')\n    } catch (error) {\n      toast.error('Unable to delete contact. Please try again');\n      console.log(error);\n    }\n  };\n    \n  return (\n    <>\n      <p>{name}: {number}</p>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" width=\"50%\">\n        {/* <CheckboxLabel>\n          <input\n            type=\"checkbox\"\n            checked={favourite}\n            onChange={() => toggleFavorite({ id, favourite: !favourite })}\n          />\n          <IoIosStar />\n        </CheckboxLabel> */}\n        <Call href={`tel:${number}`}>\n          <IoIosCall size={16} />\n          <span>Call</span>\n        </Call>\n        {/* <Button type=\"button\" onClick={() => toggleModal()} disabled={isLoading}><IoMdCreate size={16} />Edit</Button> */}\n        <Button type=\"button\" onClick={() => removeContact(id)} disabled={isLoading}>{isLoading ? <ClipLoader color=\"#FFFFFF\" size={16} /> : <IoMdTrash size={16} />}Delete</Button>\n      </Box>\n      {showModal && (\n        <Modal onCloseModal={toggleModal}>\n          <EditForm onCloseModal={toggleModal} id={id} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default ContactListItem;","import styled from 'styled-components'\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  };\n  `;\n","import ContactListItem from \"components/ContactListItem\";\nimport { Item } from './ContactList.styled';\nimport { useMemo } from 'react';\nimport { useGetContactsQuery } from \"redux/contacts/services/contactsApi\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/contacts/contactSelectors\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { Box } from \"components/Box\";\n\nconst ContactList = () => {\n    const { data: contacts = [], error, isLoading } = useGetContactsQuery();\n    const filter = useSelector(getFilter);\n    const visibleContacts = useMemo(() => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        );\n    }, [contacts, filter]);\n\n    return (\n        <>\n            {error && (<p>Something went wrong. Please try again.</p>)}\n            {isLoading ? (<Box display=\"flex\" justifyContent=\"center\" pt={4}><ClipLoader color=\"#757575\" /></Box>) :\n                (<ul>\n                    {visibleContacts.map((contact) => (\n                        <Item key={contact.id}>\n                            <ContactListItem contact={contact} />\n                        </Item>\n                    ))}\n                </ul>)\n            }\n        </>\n    )\n}\n\nexport default ContactList;","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { Box } from 'components/Box';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Modal from 'components/Modal';\nimport Button from 'components/Button';\n\n\nconst Contacts = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Box width=\"l\" p={2} as=\"div\" m=\"0 auto\">\n      <h1>Phonebook</h1>\n      <Button type=\"button\" onClick={toggleModal}>\n        <IoMdPersonAdd size={18} /> Add Contact\n      </Button>\n      {showModal && (\n        <Modal onCloseModal={toggleModal}>\n          <ContactForm onCloseModal={toggleModal} />\n        </Modal>\n      )}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3000} pauseOnHover />\n    </Box>\n  );\n}\n\nexport default Contacts;"],"names":["Box","styled","color","space","layout","flexbox","background","border","position","StyledButton","p","theme","colors","white","accent","fontWeights","bold","fontSizes","m","radii","normal","hover","prop","Button","type","children","width","disabled","onClick","defaultProps","FormBox","Form","sizes","Label","s","primary","Input","Field","borders","FormError","name","render","message","ErrorText","xs","red","Checkbox","ContactForm","onCloseModal","contactSchema","yup","shape","min","max","required","number","matches","useAddContactMutation","addContact","useGetContactsQuery","data","contacts","setContact","newContact","find","contact","toast","console","log","initialValues","validationSchema","onSubmit","values","resetForm","title","getFilter","state","filter","useSelector","dispatch","useDispatch","value","onChange","e","changeFilter","target","Call","green","Overlay","ModalBox","modalRoot","document","querySelector","Modal","useEffect","onEscPress","evt","code","window","addEventListener","removeEventListener","createPortal","currentTarget","size","EditForm","id","useUpdateContactMutation","updateContact","useGetContactByIdQuery","isLoading","phone","fields","favourite","useState","showModal","setShowModal","toggleModal","useDeleteContactMutation","deleteContact","removeContact","display","justifyContent","alignItems","href","Item","error","visibleContacts","useMemo","normalizedFilter","toLowerCase","includes","pt","map","as","autoClose","pauseOnHover"],"sourceRoot":""}